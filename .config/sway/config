### Variables

# Alt as mod key
set $mod Mod1

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Terminal emulator
set $term alacritty

# Application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu fuzzel

# No borders
for_window [class="^.*"] border pixel 2

### Output configuration

# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
exec_always ~/bin/bgchange_wayland
exec ibus-daemon --xim --daemonize -r

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
input * {
    xkb_layout latam
    tap enabled
    natural_scroll enabled
}

# Enable num lock by default
input type:keyboard xkb_numlock enabled

### Key bindings

# Basics:
# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+Shift+q kill

# Start launcher
bindsym $mod+d exec $menu

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+r reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

bindsym $mod+End exec systemctl poweroff

# Moving around:
# Move  focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# Workspaces:
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# Layout stuff:
# Horizontal and vertical splits
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
# Not using stacking
# bindsym $mod+s layout stacking
# Tabbed is $mod+s because $mod+w is used to copy on tmux
bindsym $mod+s layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# Move focus to the parent container
bindsym $mod+a focus parent

# Scratchpad:
# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
bindsym $mod+minus scratchpad show

# Resizing containers:

mode "resize" {
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

### Custom System controls:
# Volume and brightness controls
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5% && pactl set-sink-mute @DEFAULT_SINK@ 0
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5% && pactl set-sink-mute @DEFAULT_SINK@ 0
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym --locked XF86MonBrightnessUp exec brightnessctl set +5%
bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-

### Screenshots
# Print for interactive screenshot and copy to clipboard
bindsym Print exec ~/bin/area-screenshot
# Ctrl+Print for window screenshot and copy to clipboard
bindsym Ctrl+Print exec ~/bin/window-screenshot
# Mod+Print for full screenshot and save to file
bindsym $mod+Print exec ~/bin/screen-screenshot ~/hdd/Pictures/Screenshots/$(date +%Y-%m-%d-%H-%M-%S).png

# Ctrl+Shift+Escape for htop in a floating window
bindsym Ctrl+Shift+Escape exec $term --class htop-keybind -e htop
for_window [app_id="htop-keybind"] floating enable, move position center

### Custom misc

# For IntelliJ
exec_always wmname LG3D
focus_follows_mouse no

# Telegram opens in floating
for_window [app_id="org.telegram.desktop"] floating enable, move position center, resize set 452 504

# For ProtonVPN to work
exec_always nm-applet &

# Status Bar:
bar {
    swaybar_command waybar
}

include /etc/sway/config.d/*

set $peach     #fab387
set $text      #cdd6f4
set $base      #1e1e2e
set $overlay0  #6c7086
set $rosewater #f5e0dc
set $mauve     #cba6f7
set $mantle    #181825

# target                 title     bg    text      indicator    border
client.focused           $mantle   $mauve $mantle  $rosewater $mauve
client.focused_inactive  $overlay0 $base  $text    $rosewater $overlay0
client.unfocused         $overlay0 $base  $text    $rosewater $overlay0
client.urgent            $peach    $base  $peach   $overlay0  $peach
client.placeholder       $overlay0 $base  $text    $overlay0  $overlay0
client.background        $base
